@model Golf_Roster_Creator.TeeTime

@{
    ViewBag.Title = "Creat Tee Time";
}

<div class="row">
    <div class="span12">
        <h2>@ViewBag.Title</h2>

        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)

    
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model._TeeTime, "Tee Time")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model._TeeTime, new { @class = "time-selection" })
                    @Html.ValidationMessageFor(model => model._TeeTime)
                </div>
            </div>
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Golfer1, "Golfer 1")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Golfer1, (IEnumerable<SelectListItem>)ViewBag.golfers, "-- Select Golfer --") 
                    @Html.ValidationMessageFor(model => model.Golfer1)
                    @Html.DropDownListFor(model => model.WalkRide1, new SelectList(new[] { "Walk","Ride" }), "Walking or Riding?")
                </div>
            </div>
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Golfer2, "Golfer 2")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Golfer2, (IEnumerable<SelectListItem>)ViewBag.golfers, "-- Select Golfer --")
                    @Html.ValidationMessageFor(model => model.Golfer2)
                    @Html.DropDownListFor(model => model.WalkRide2, new SelectList(new[] { "Walk","Ride" }), "Walking or Riding?")
                </div>
            </div>
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Golfer3, "Golfer 3")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Golfer3, (IEnumerable<SelectListItem>)ViewBag.golfers, "-- Select Golfer --")
                    @Html.ValidationMessageFor(model => model.Golfer3)
                    @Html.DropDownListFor(model => model.WalkRide3, new SelectList(new[] { "Walk","Ride" }), "Walking or Riding?")
                </div>
            </div>
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Golfer4, "Golfer 4")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Golfer4, (IEnumerable<SelectListItem>)ViewBag.golfers, "-- Select Golfer --")
                    @Html.ValidationMessageFor(model => model.Golfer4)
                    @Html.DropDownListFor(model => model.WalkRide4, new SelectList(new[] { "Walk","Ride" }), "Walking or Riding?")
                </div>
            </div>
            <div class="editor-container">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Golfer5, "Golfer 5")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Golfer5, (IEnumerable<SelectListItem>)ViewBag.golfers, "-- Select Golfer --")
                    @Html.ValidationMessageFor(model => model.Golfer5)
                    @Html.DropDownListFor(model => model.WalkRide5, new SelectList(new[] { "Walk","Ride" }), "Walking or Riding?")
                </div>
            </div>

            <p>
                <input type="submit" class="btn btn-info" value="Create" />
                @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn" })
            </p>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
